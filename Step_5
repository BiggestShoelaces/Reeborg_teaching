# we need to collect strawberries in each run
# we need to desposit strawberries in the main run
# we need to go to the goal

from library import turn_around
from library import turn_right
from library import left_is_clear
from library import walk_down_hall
from library import navigate
from library import row_collect

repeat 2:
    navigate()
row_collect()
repeat 3:
    navigate()
    row_collect()



//Library
def turn_around(): # A function that turns reeborg around
    repeat 2: # Need two left turn
        turn_left() # Turn left

def turn_right(): # A function that turn reeborg right
    turn_around() # Turn around and...
    turn_left()  # Turn left again (3 left turns = 1 right turn) 

def left_is_clear(): # A function that checks if it is clear to the left
    turn_left() # First turn to the left
    if front_is_clear(): # Then check if front is clear
        turn_right()         # if it is clear, turn right...
        return True          # and return the value True
    else:                # Then check if front is clear 
        turn_right()         # if it is NOT clear, turn right...
        return False         # and return the value False

def walk_down_hall(): # A function that walks down the hall
    while front_is_clear(): # while the front is clear
        move() # take a step
        
def navigate(): # A function that helps reeborg navigate
    global returns_facing_east
    if not left_is_clear() and not right_is_clear(): 
        # If there is a wall on both sides of reeborg
            move() # then take a step forward
    elif left_is_clear() and not right_is_clear():
        # If there is a right wall and no left wall
        turn_left() # then turn left
        returns_facing_east = True # 1=True this is for the last if statement
    elif not left_is_clear() and right_is_clear():
        # If there is a left wall and no right wall
        turn_right() # then turn right
        returns_facing_east = False # 0=False this is for the last if statement
    elif left_is_clear() and right_is_clear():
        # If there are no walls (then reeborg is facing east or west)
            # if reeborg is face east how will we know
            # We can toggle. First will be east, then west, back and forth
        print(returns_facing_east)
        if returns_facing_east == True:
            print("I am facing east")
            turn_left()
            move()
            turn_right()
        else:
            turn_right()
            move()
            turn_left()
            
        
             
def row_collect():
    while front_is_clear():
        repeat 2:
            move()
            take()
    turn_around()
    repeat 2:
        move()
    repeat 2:
        put()
